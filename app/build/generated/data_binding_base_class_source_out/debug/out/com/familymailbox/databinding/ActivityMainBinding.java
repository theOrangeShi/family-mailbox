// Generated by view binder compiler. Do not edit!
package com.familymailbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.familymailbox.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnFile;

  @NonNull
  public final MaterialButton btnImage;

  @NonNull
  public final ImageButton btnRemoveImage;

  @NonNull
  public final MaterialButton btnSend;

  @NonNull
  public final TextInputEditText editText;

  @NonNull
  public final ImageView imagePreview;

  @NonNull
  public final LinearLayout imagePreviewContainer;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton btnFile,
      @NonNull MaterialButton btnImage, @NonNull ImageButton btnRemoveImage,
      @NonNull MaterialButton btnSend, @NonNull TextInputEditText editText,
      @NonNull ImageView imagePreview, @NonNull LinearLayout imagePreviewContainer,
      @NonNull RecyclerView recyclerView, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.btnFile = btnFile;
    this.btnImage = btnImage;
    this.btnRemoveImage = btnRemoveImage;
    this.btnSend = btnSend;
    this.editText = editText;
    this.imagePreview = imagePreview;
    this.imagePreviewContainer = imagePreviewContainer;
    this.recyclerView = recyclerView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_file;
      MaterialButton btnFile = ViewBindings.findChildViewById(rootView, id);
      if (btnFile == null) {
        break missingId;
      }

      id = R.id.btn_image;
      MaterialButton btnImage = ViewBindings.findChildViewById(rootView, id);
      if (btnImage == null) {
        break missingId;
      }

      id = R.id.btn_remove_image;
      ImageButton btnRemoveImage = ViewBindings.findChildViewById(rootView, id);
      if (btnRemoveImage == null) {
        break missingId;
      }

      id = R.id.btn_send;
      MaterialButton btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.edit_text;
      TextInputEditText editText = ViewBindings.findChildViewById(rootView, id);
      if (editText == null) {
        break missingId;
      }

      id = R.id.image_preview;
      ImageView imagePreview = ViewBindings.findChildViewById(rootView, id);
      if (imagePreview == null) {
        break missingId;
      }

      id = R.id.image_preview_container;
      LinearLayout imagePreviewContainer = ViewBindings.findChildViewById(rootView, id);
      if (imagePreviewContainer == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnFile, btnImage, btnRemoveImage,
          btnSend, editText, imagePreview, imagePreviewContainer, recyclerView, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
