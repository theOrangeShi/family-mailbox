// Generated by view binder compiler. Do not edit!
package com.familymailbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.familymailbox.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMessageBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView attachmentFile;

  @NonNull
  public final ImageView attachmentImage;

  @NonNull
  public final FrameLayout attachmentMediaContainer;

  @NonNull
  public final VideoView attachmentVideo;

  @NonNull
  public final TextView messageText;

  @NonNull
  public final ImageView videoPlayButton;

  @NonNull
  public final View videoPlayOverlay;

  private ItemMessageBinding(@NonNull MaterialCardView rootView, @NonNull TextView attachmentFile,
      @NonNull ImageView attachmentImage, @NonNull FrameLayout attachmentMediaContainer,
      @NonNull VideoView attachmentVideo, @NonNull TextView messageText,
      @NonNull ImageView videoPlayButton, @NonNull View videoPlayOverlay) {
    this.rootView = rootView;
    this.attachmentFile = attachmentFile;
    this.attachmentImage = attachmentImage;
    this.attachmentMediaContainer = attachmentMediaContainer;
    this.attachmentVideo = attachmentVideo;
    this.messageText = messageText;
    this.videoPlayButton = videoPlayButton;
    this.videoPlayOverlay = videoPlayOverlay;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attachment_file;
      TextView attachmentFile = ViewBindings.findChildViewById(rootView, id);
      if (attachmentFile == null) {
        break missingId;
      }

      id = R.id.attachment_image;
      ImageView attachmentImage = ViewBindings.findChildViewById(rootView, id);
      if (attachmentImage == null) {
        break missingId;
      }

      id = R.id.attachment_media_container;
      FrameLayout attachmentMediaContainer = ViewBindings.findChildViewById(rootView, id);
      if (attachmentMediaContainer == null) {
        break missingId;
      }

      id = R.id.attachment_video;
      VideoView attachmentVideo = ViewBindings.findChildViewById(rootView, id);
      if (attachmentVideo == null) {
        break missingId;
      }

      id = R.id.message_text;
      TextView messageText = ViewBindings.findChildViewById(rootView, id);
      if (messageText == null) {
        break missingId;
      }

      id = R.id.video_play_button;
      ImageView videoPlayButton = ViewBindings.findChildViewById(rootView, id);
      if (videoPlayButton == null) {
        break missingId;
      }

      id = R.id.video_play_overlay;
      View videoPlayOverlay = ViewBindings.findChildViewById(rootView, id);
      if (videoPlayOverlay == null) {
        break missingId;
      }

      return new ItemMessageBinding((MaterialCardView) rootView, attachmentFile, attachmentImage,
          attachmentMediaContainer, attachmentVideo, messageText, videoPlayButton,
          videoPlayOverlay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
